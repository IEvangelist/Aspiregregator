@rendermode InteractiveServer

@inject IJSRuntime JS
@inject IHttpClientFactory HttpClientFactory

<img src="@($"https://corsproxy.io/?{Uri.EscapeDataString(Source)}")" alt="@AltText" title="@Title" />

@code {
    [Parameter, EditorRequired]
    public required string Source { get; set; }

    [Parameter, EditorRequired]
    public required string AltText { get; set; }

    [Parameter]
    public string Title { get; set; } = default!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Force state changed.
            await InvokeAsync(StateHasChanged);
        }
    }

    // private async ValueTask<string> GetImageFromStorageAsync()
    // {
    //     var base64Image = await JS.GetItemAsync<string?>(Source);

    //     if (string.IsNullOrWhiteSpace(base64Image))
    //     {
    //         var client = HttpClientFactory.CreateClient();
    //         var imageBytes = await client.GetByteArrayAsync(Source);

    //         base64Image = Convert.ToBase64String(imageBytes);

    //         await JS.SetItemAsync(Source, base64Image);
    //     }

    //     return $"data:image/png;base64,{base64Image}";
    // }
}
