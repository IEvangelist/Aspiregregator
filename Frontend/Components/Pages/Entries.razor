@page "/entries/{Slug}"
@using Humanizer
@inject ISourceProvider sourceProvider

<PageTitle>Entries for @selectedSource?.Name</PageTitle>

<h1>Entries for @selectedSource?.Name</h1>

<p>Here are the entries for the source @selectedSource?.Name.</p>

@if (selectedSource == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <FluentGrid AdaptiveRendering="true">
        @foreach (var item in selectedSource.MostRecentItems)
        {
            <FluentCard Width="400px" Height="250px" style="margin: 10px;">

                <FluentStack Orientation="Orientation.Vertical"
                             HorizontalAlignment="HorizontalAlignment.Left"
                             VerticalAlignment="VerticalAlignment.Top">
                    <div style="font-style: italic; font-size: .95em;">@item.GetDisplayDate().Humanize()</div>
                    <div style="text-decoration: none; font-weight: bold; font-size: 1.2em;">
                        <a target="_blank" href="@item.Link">@item.Title</a>
                    </div>
                    <div>@item.GetTrimmedDescription(255)</div>
                </FluentStack>

            </FluentCard>
        }
    </FluentGrid>
}

@code {
    private SourceItem? selectedSource;

    [Parameter]
    public string? Slug { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var sources = await sourceProvider.GetSourcesAsync();
        selectedSource = sources.FirstOrDefault(x => x.GetSlug() == Slug);
    }
}
