@page "/entries/{Slug}"
@rendermode InteractiveServer
@inject ISourceProvider sourceProvider
@inject EntriesPageViewModel viewModel

@if(viewModel.SelectedSource is not null)
{
    <PageTitle>Entries for @viewModel.SelectedSource?.Name</PageTitle>
}
else
{
    <PageTitle>No source selected</PageTitle>
}

<PageLayout>
    <BodyContent>
        @if (viewModel.SelectedSource is not null)
        {
            <h1>Entries for @viewModel.SelectedSource?.Name</h1>
            <p>Here are the entries for the source @viewModel.SelectedSource?.Name.</p>

            <FluentGrid AdaptiveRendering="true">
                @foreach (var item in viewModel.SelectedSource!.MostRecentItems)
                {
                    <FluentCard Width="400px" Height="250px" style="margin: 10px;">

                <FluentStack Orientation="Orientation.Vertical"
                             HorizontalAlignment="HorizontalAlignment.Left"
                             VerticalAlignment="VerticalAlignment.Top">
                    <img src="@item.Images?.FirstOrDefault()" />
                    <div style="font-style: italic; font-size: .95em;">@item.GetDisplayDate().Humanize()</div>
                    <div style="text-decoration: none; font-weight: bold; font-size: 1.2em;">
                        <a target="_blank" href="@item.Link">@item.Title</a>
                    </div>
                    <div>@item.GetTrimmedDescription(255)</div>
                </FluentStack>

                    </FluentCard>
                }
            </FluentGrid>
        }
        else
        {
            <PageTitle>No source selected</PageTitle>
        }
    </BodyContent>
</PageLayout>

@code {

    [Parameter]
    public string? Slug { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(Slug))
        {
            await viewModel.SelectSource(Slug);
        }
    }
}
