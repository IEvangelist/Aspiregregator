@page "/entries/{Slug}"
@inject ISourceProvider sourceProvider

<PageTitle>Entries for @selectedSource?.Name</PageTitle>

<h1>Entries for @selectedSource?.Name</h1>

<p>Here are the entries for the source @selectedSource?.Name.</p>

@if (selectedSource == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <FluentGrid AdaptiveRendering="true">
        @foreach (var item in selectedSource.MostRecentItems)
        {
            <FluentCard Width="400px" Height="300px" style="margin: 10px;">
                <div style="font-weight: bold; padding-bottom: 10px;">
                    <a href="@item.Link">@item.Title</a>
                </div>
                <div>
                    @item.GetTrimmedDescription(255)
                </div>

            </FluentCard>
        }
    </FluentGrid>
}

@code {
    private SourceItem? selectedSource;

    [Parameter]
    public string? Slug { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var sources = await sourceProvider.GetSourcesAsync();
        selectedSource = sources.FirstOrDefault(x => x.GetSlug() == Slug);
    }
}
